// Code generated by MockGen. DO NOT EDIT.
// Source: ./csasession/clientfactory/kmsclient.go

// Package mocks is a generated GoMock package.
package mocks

import (
	kms "github.com/aws/aws-sdk-go/service/kms"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockKmsClient is a mock of KmsClient interface
type MockKmsClient struct {
	ctrl     *gomock.Controller
	recorder *MockKmsClientMockRecorder
}

// MockKmsClientMockRecorder is the mock recorder for MockKmsClient
type MockKmsClientMockRecorder struct {
	mock *MockKmsClient
}

// NewMockKmsClient creates a new mock instance
func NewMockKmsClient(ctrl *gomock.Controller) *MockKmsClient {
	mock := &MockKmsClient{ctrl: ctrl}
	mock.recorder = &MockKmsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockKmsClient) EXPECT() *MockKmsClientMockRecorder {
	return m.recorder
}

// ListKeys mocks base method
func (m *MockKmsClient) ListKeys(input *kms.ListKeysInput) (*kms.ListKeysOutput, error) {
	ret := m.ctrl.Call(m, "ListKeys", input)
	ret0, _ := ret[0].(*kms.ListKeysOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListKeys indicates an expected call of ListKeys
func (mr *MockKmsClientMockRecorder) ListKeys(input interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListKeys", reflect.TypeOf((*MockKmsClient)(nil).ListKeys), input)
}

// ListAliases mocks base method
func (m *MockKmsClient) ListAliases(input *kms.ListAliasesInput) (*kms.ListAliasesOutput, error) {
	ret := m.ctrl.Call(m, "ListAliases", input)
	ret0, _ := ret[0].(*kms.ListAliasesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAliases indicates an expected call of ListAliases
func (mr *MockKmsClientMockRecorder) ListAliases(input interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAliases", reflect.TypeOf((*MockKmsClient)(nil).ListAliases), input)
}
